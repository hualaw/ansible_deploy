#!/bin/sh

#########################################
# checkout: checkout source code into path
#
# usage:
#   checkout git_repo localpath
#########################################
checkout() {
  if [ ! -d $2 ]; then
    git clone $1 $2
  else
    pushd .
    cd $2
    # remove any local unstaged changes
    git clean -f
    git reset --hard
    # switch to online branch
    git checkout master
    git branch -D online
    git checkout -B online
    # pull lastest change from master or tag
    git pull origin $3
    popd
  fi
}

#########################################
# build_package: build package into ansible path
#
# usage:
#   build_package packagename localpath
#########################################
build_package() {
  #cp ./bin/deploy_bootstrap.sh $2/.
  #./bin/makeself.sh $2 deploy-`date "+%Y%m%d%H%M%S"`.run "deploy installer" ./deploy_bootstrap.sh

  pushd .
  cd $2/..
  tar --exclude=.git* --exclude=*.tar.gz -czf $1.tar.gz $1
  popd
  /bin/cp -f $2/../$1.tar.gz roles/$1/files
}

#########################################
# rsync_package: rsync package to remote hosts
#
# usage:
#   rsync_package username remotehost remotepath localpath
#########################################
rsync_package() {
  rsync -avz --progress --delete --exclude ".git*" --exclude "*.pyc" $4 $1@$2:$3
}

#########################################
# install_package: install package with ansible
#
# usage:
#   install_package packagename sshkey inventoryfile
#########################################
install_package() {
  TAG_PARA=
  LIMIT_PARA=
  if [ ! -z "$4" ]; then
    TAG_PARA="--tags $4"
  fi
  if [ ! -z "$5" ]; then
    LIMIT_PARA="--limit $5"
  fi
  ANSIBLE_MODULE_LANG=en_US.UTF-8 ansible-playbook -vvv --private-key=$2 -i $3 $TAG_PARA $LIMIT_PARA $1.yml
}

#########################################
# install_package: install package with ansible
#
# usage:
#   install_package_manual ssh_port ssh_user host_ip local_path package_name
#########################################
install_tizi_manual() {
  ssh -p $1 $2@$3 -t "sudo su -c 'tar zxvf /home/$2/$5.tar.gz;rsync -avz --progress --delete --exclude=\"*.pyc\" /home/$2/$5 /space1/;/bin/cp /space1/$5/application/config/online_config.php /space1/$5/application/config/config.php;/bin/cp /space1/$5/application/config/online_database.php /space1/$5/application/config/database.php;/bin/cp /space1/$5/application/config/online_redis.php /space1/$5/application/config/redis.php;/bin/cp /space1/$5/application/config/online_download.php /space1/$5/application/config/download.php;/bin/cp /space1/$5/application/config/online_sms.php /space1/$5/application/config/sms.php;/bin/cp /space1/$5/application/config/online_thrift.php /space1/$5/application/config/thrift.php;/bin/rm -f /space1/$5/application/templates_c/*;chown -R www-data:www-data /space1/$5;/etc/init.d/nginx reload'"
}

#########################################
# install_package: install package with ansible
#
# usage:
#   install_waijiao_manual ssh_port ssh_user host_ip local_path package_name
#########################################
install_waijiao_manual() {
  ssh -p $1 $2@$3 -t "sudo su -c 'rsync -avz --progress --delete /home/$2/$5 /space1/;chown -R www-data:www-data /space1/$5;/etc/init.d/nginx reload'"
}


#!/bin/sh

#########################################
# checkout: checkout source code into path
#
# usage:
#   checkout git_repo localpath
#########################################
checkout() {
  if [ ! -d $2 ]; then
    git clone $1 $2
  else
    pushd .
    cd $2
    # remove any local unstaged changes
    git clean -f
    git reset --hard
    # switch to online branch
    git checkout master
    git branch -D online
    git checkout -B online
    # pull lastest change from master or tag
    git pull origin $3
    popd
  fi
}

#########################################
# build_package: build package into ansible path
#
# usage:
#   build_package packagename localpath
#########################################
build_package() {
  #cp ./bin/deploy_bootstrap.sh $2/.
  #./bin/makeself.sh $2 deploy-`date "+%Y%m%d%H%M%S"`.run "deploy installer" ./deploy_bootstrap.sh

  pushd .
  cd $2/..
  tar --exclude=.git* --exclude=*.tar.gz -czf $1.tar.gz $1
  popd
  /bin/cp -f $2/../$1.tar.gz roles/$1/files
}

#########################################
# rsync_package: rsync package to remote hosts
#
# usage:
#   rsync_package username remotehost remotepath localpath
#########################################
rsync_package() {
  rsync -avz --progress --delete --exclude "*.pyc" $4 $1@$2:$3
}

#########################################
# install_package: install package with ansible
#
# usage:
#   install_package packagename sshkey inventoryfile
#########################################
install_package() {
  ANSIBLE_MODULE_LANG=en_US.UTF-8 ansible-playbook -v --private-key=$2 -i $3 $1.yml
}

